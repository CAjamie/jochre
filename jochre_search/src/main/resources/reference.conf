jochre {
	search {
		# Template for search configurations
		# Consider inheriting from this template
		generic {
			locale = null
			
			# The path to the directory containing the index
			# The special value "IN-MEMORY" means an in-memory index
			index-dir = IN-MEMORY
			
			# The path to the directory containing the PDF and Alto files
			content-dir = null
			
			# The optional lexicon file location
			# lexicon = ...
	
			# The maximum results that can be retrieved by a search query.
			max-results = 10000
			
			# Default number of results per page
			results-per-page = 10
			
			index-builder {
				# Approximate number of words per Lucene document
				# If 0, there is a 1-to-1 equivalence between Alto and Lucene documents.
				words-per-document = 0
			}
			
			text-normaliser {
				# Optional class name of the text normaliser
				# Must implement com.joliciel.jochre.search.lexicon.TextNormaliser
				# Must implement a constructor taking a String (the config id)
				# class = ...
			}
			
			highlighter {
				# The CSS class to add to spans for highlighted terms
				highlight-css-class = "highlight"
			}
			
			snippet-finder {
				# The class name of the snippet finder
				# Must implement com.joliciel.jochre.search.highlight.SnippetFinder
				# Must implement a constructor taking a String (the config id)
				class = com.joliciel.jochre.search.highlight.FullRowSnippetFinder
				
				# Max number of snippets to return
				snippet-count = 10
				
				# For a FullRowSnippetFinder
				# How many rows to add before and after the snippet.
				row-extension = 1
				
				# For a FixedSizeSnippetFinder
				# Approximate size of snippets in characters
				snippet-size = 100
			}
			
			alto-string-fixer {
				# The class name of the alto string fixer
				# Must implement com.joliciel.jochre.search.alto.AltoStringFixer
				# Must implement a constructor taking a String (the config id)
				# Pre-built possibilities include:
				# com.joliciel.jochre.search.alto.YiddishAltoStringFixer
				# class = ...
			}
			
			query-token-filter {
				# The classname of an optional query token filter
				# Must extend org.apache.lucene.analysis.TokenFilter, and implement a constructor taking a org.apache.lucene.analysis.TokenStream
				# Pre-built possibilities include:
				# com.joliciel.jochre.search.YiddishQueryTokenFilter
				# com.joliciel.jochre.search.OccitanQueryTokenFilter
				# class = ...
			}
			
			# The default configuration for JDBC
			jdbc {
				# If there is no url, there is assumed to be no database
				# url = ...
				# If we have a database, the username and password have to be overridden
				username = null
				password = null
				# These can be left as defaults
				driver-class-name = "org.postgresql.Driver"
				checkout-timeout = 30 seconds
				max-pool-size = 10
				min-idle = 1
				idle-timeout = 10 minutes
				max-lifetime = 30 minutes
			}
			
			# The IP address to use for logging if none is provided
			default-ip = "1.2.3.4"
			
			# The default number of decimal places to use for rounding scores.
			decimal-places = 2
		}
	}
}